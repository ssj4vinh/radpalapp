import{s as c}from"./BlurCard.js";import{g as n,d as g}from"./logicMerge.js";async function p(s,t,o){var r;try{const{data:e,error:a}=await c.from("templates").select("agent_logic").eq("user_id",s).eq("study_type",t.trim());if(a)return{success:!1,error:`Failed to fetch current logic: ${a.message}`};const u=e&&e.length>0?((r=e[0])==null?void 0:r.agent_logic)||n():n(),i=g(u,o);if(!e||e.length===0)return{success:!1,error:`No template found for study type "${t}". Please create a template for this study type first through the template manager.`};const{error:l}=await c.from("templates").update({agent_logic:i}).eq("user_id",s).eq("study_type",t.trim());return l?{success:!1,error:`Failed to update logic: ${l.message}`}:{success:!0,finalLogic:i}}catch(e){return{success:!1,error:`Unexpected error: ${e instanceof Error?e.message:"Unknown error"}`}}}async function d(s,t){try{const{data:o,error:r}=await c.from("templates").select("id").eq("user_id",s).eq("study_type",t.trim());if(r)return{success:!1,error:`Failed to check template: ${r.message}`};if(!o||o.length===0)return{success:!1,error:`No template found for study type "${t}". Please create a template for this study type first through the template manager.`};const e=n(),{error:a}=await c.from("templates").update({agent_logic:e}).eq("user_id",s).eq("study_type",t.trim());return a?{success:!1,error:`Failed to reset logic: ${a.message}`}:{success:!0,finalLogic:e}}catch(o){return{success:!1,error:`Unexpected error: ${o instanceof Error?o.message:"Unknown error"}`}}}async function h(s,t){var o;try{if(!t||!t.trim())return{logic:null,error:"Study type is required"};const{data:r,error:e}=await c.from("templates").select("agent_logic").eq("user_id",s).eq("study_type",t.trim());return e?{logic:null,error:`Failed to fetch logic: ${e.message}`}:!r||r.length===0?{logic:n()}:(r.length>1&&console.warn(`Multiple templates found for user ${s} and study type ${t}. Using the first one.`),{logic:((o=r[0])==null?void 0:o.agent_logic)||n()})}catch(r){return{logic:null,error:`Unexpected error: ${r instanceof Error?r.message:"Unknown error"}`}}}export{h as getCurrentAgentLogic,d as resetAgentLogicToDefault,p as updateAgentLogic};
