async function t(o,e,i){var c,r;try{if(!o||!(e!=null&&e.trim()))throw new Error("User ID and study type are required");console.log("üîß Updating agent logic via IPC:",{userId:o,studyType:e});const n=await((r=(c=window.electron)==null?void 0:c.ipcRenderer)==null?void 0:r.invoke("agent-logic-update",o,e,i));if(n!=null&&n.error)throw new Error(n.error);return console.log("‚úÖ Agent logic updated successfully via IPC"),{success:!0,finalLogic:n.finalLogic}}catch(n){return console.error("‚ùå updateAgentLogic failed:",n),{success:!1,error:n instanceof Error?n.message:"Unknown error occurred"}}}async function a(o,e){var i,c;try{if(!o||!(e!=null&&e.trim()))throw new Error("User ID and study type are required");console.log("üîÑ Resetting agent logic to default via IPC:",{userId:o,studyType:e});const r=await((c=(i=window.electron)==null?void 0:i.ipcRenderer)==null?void 0:c.invoke("agent-logic-reset",o,e));if(r!=null&&r.error)throw new Error(r.error);return console.log("‚úÖ Agent logic reset successfully via IPC"),{success:!0,finalLogic:r.finalLogic}}catch(r){return console.error("‚ùå resetAgentLogicToDefault failed:",r),{success:!1,error:r instanceof Error?r.message:"Unknown error occurred"}}}async function g(o,e){var i,c;try{if(!o||!(e!=null&&e.trim()))throw new Error("User ID and study type are required");console.log("üìñ Getting current agent logic via IPC:",{userId:o,studyType:e});const r=await((c=(i=window.electron)==null?void 0:i.ipcRenderer)==null?void 0:c.invoke("agent-logic-get-current",o,e));if(r!=null&&r.error)throw new Error(r.error);return{logic:r.logic}}catch(r){return console.error("‚ùå getCurrentAgentLogic failed:",r),{logic:null,error:r instanceof Error?r.message:"Unknown error occurred"}}}export{g as getCurrentAgentLogic,a as resetAgentLogicToDefault,t as updateAgentLogic};
